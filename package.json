{
  "name": "azurearc",
  "icon": "media/Azure-Arc.png",
  "publisher": "peterwu",
  "displayName": "Azure Arc",
  "description": "Azure Arc",
  "version": "0.0.14",
  "engines": {
    "vscode": "^1.78.0"
  },
  "categories": [
    "Other"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/azure/azurearc-dev"
  },
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "azurearc.openWalkthrough",
        "title": "Arc Extension: Open walkthrough"
      },
      {
        "command": "azurearc.gettingStarted",
        "title": "Arc Extension: Getting started"
      },
      {
        "command": "azurearc.getSamples",
        "title": "Arc Extension: Get Samples"
      },
      {
        "command": "azurearc.provisionCluster",
        "title": "Arc Extension: Provision local cluster"
      },
      {
        "command": "azurearc.buildImage",
        "title": "Arc Extension: Build docker images"
      },
      {
        "command": "azurearc.installHelmchart",
        "title": "Arc Extension: Install helm charts"
      },
      {
        "command": "azurearc.validateHelm",
        "title": "Arc Extension: Validate helm chart"
      },
      {
        "command": "azurearc.refreshArcClusters",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "azurearc.rebuildSubItems",
        "title": "Edit Selection",
        "icon": "$(edit)"
      },
      {
        "command": "azurearc.connectToArc",
        "title": "Connect To Arc",
        "icon": "$(cloud-upload)"
      },
      {
        "command": "azurearc.setNativeClusterContext",
        "title": "Set as Current Context",
        "icon": "$(star-full)"
      },
      {
        "command": "azurearc.disconnectFromArc",
        "title": "Disconnect from Arc",
        "icon": "$(trash)"
      },
      {
        "command": "azurearc.createAksEE",
        "title": "Create an AKS Edge Essential Cluster",
        "icon": "$(add)"
      },
      {
        "command": "azurearc.refreshNativeClusters",
        "title": "Refresh",
        "icon": "$(refresh)"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "azurearc.buildImage",
          "title": "Build Docker Image",
          "group": "3.1_azurearc",
          "when": "resourceFilename =~ /Dockerfile$/"
        }
      ],
      "view/title": [
        {
          "command": "azurearc.refreshArcClusters",
          "when": "view == arccluster",
          "group": "navigation"
        },
        {
          "command": "azurearc.rebuildSubItems",
          "when": "view == arccluster",
          "group": "navigation"
        },
        {
            "command": "azurearc.createAksEE",
            "when": "view == localcluster",
            "group": "navigation"
        },
        {
          "command": "azurearc.refreshNativeClusters",
          "when": "view == localcluster",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
            "command": "azurearc.disconnectFromArc",
            "when": "view == arccluster && viewItem == arcclusterItem",
            "group": "inline"
        },
        {
            "command": "azurearc.disconnectFromArc",
            "when": "view == arccluster && viewItem == arcclusterItem"
        },
        {
            "command": "azurearc.connectToArc",
            "when": "view == localcluster && (viewItem == canConnect || viewItem == canConnectAndSetContext)",
            "group": "inline"
        },
        {
            "command": "azurearc.connectToArc",
            "when": "view == localcluster && (viewItem == canConnect || viewItem == canConnectAndSetContext)"
        },
        {
            "command": "azurearc.setNativeClusterContext",
            "when": "view == localcluster && (viewItem == canSetContext || viewItem == canConnectAndSetContext)",
            "group": "inline"
        },
        {
            "command": "azurearc.setNativeClusterContext",
            "when": "view == localcluster && (viewItem == canSetContext || viewItem == canConnectAndSetContext)"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "arc-extension",
          "title": "Arc Extension",
          "icon": "media/Azure-Arc.svg"
        }
      ]
    },
    "views": {
      "arc-extension": [
        {
          "id": "arccluster",
          "name": "Arc-connected Clusters",
          "icon": "$(azure)",
          "contextualTitle": "Arc Clusters"
        },
        {
          "id": "localcluster",
          "name": "Native K8S Clusters",
          "icon": "$(azure)",
          "contextualTitle": "Native Clusters"
        },
        {
          "id": "helpandfeedback",
          "name": "Help & Feedback",
          "icon": "$(azure)",
          "contextualTitle": "Help & Feedback"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "arccluster",
        "contents": "You have not yet signed in to Azure.\n[Login to Azure](command:azure-account.askForLogin)\nPlease sign in to work with your Arc-enabled clusters",
        "when": "askAzLogin == true"
      },
      {
        "view": "arccluster",
        "contents": "You have not selected subscriptions and resource groups to list your Arc-enabled K8S clusters.\n[Start](command:azurearc.rebuildSubItems)\n[Learn more](https://learn.microsoft.com/en-us/azure/azure-arc/kubernetes/overview) about Arc-enabled K8S clusters.",
        "when": "askSubRg == true"
      },
      {
        "view": "localcluster",
        "contents": "Could not discover any native K8S cluster from your KUBECONFIG.\n[Create an AKS EE cluster](command:azurearc.createAksEE?%5B%22aksee%22%5D)\nLearn more about [AKS Edge Essential](https://learn.microsoft.com/en-us/azure/aks/hybrid/aks-edge-overview)",
        "when": "askCreateCluster == true"
      }
    ],
    "configuration": {
      "title": "CloudGPT",
      "type": "object",
      "properties": {
        "azurearc.apiKey": {
          "markdownDescription": "CloudGPT API key",
          "type": "string",
          "order": 0
        },
        "azurearc.apiUrl": {
          "markdownDescription": "CloudGPT API url",
          "type": "string",
          "order": 1
        }
      }
    },
    "walkthroughs": [
      {
        "id": "walkthrough",
        "title": "Get Started with Azure Arc in VS Code",
        "icon": "media/Azure-Arc.png",
        "description": "Learn the different functionality offered in the Azure Arc VS Code extension.",
        "steps": [
            {
                "id": "start",
                "title": "Find Azure Arc commands",
                "description": "All Azure Arc commands can be found in one place. Bring up the command palette by pressing F1 and search for 'Arc Extension: Getting Started'.",
                "media": {
                    "image": "media/getstarted.gif",
                    "altText": "Empty image"
                }
            },
            {
                "id": "provision",
                "title": "Deploy an AKS Edge Essentials cluster.",
                "description": "Deploy your first Arc-compatible environment by creating a single machine AKS Edge Essentials cluster. You can connect this cluster to Arc and use it to deploy your application and Arc enabled workloads.",
                "media": {
                    "markdown": "media/provision.md"
                }
            },
            {
                "id": "connectToArc",
                "title": "Connect native clusters to Arc",
                "description": "Connect your AKS or AKS Hybrid clusters to Arc with a single click.",
                "media": {
                    "markdown": "media/connectToArc.md"
                }
            },
            {
                "id": "samples",
                "title": "Discover sample applications",
                "description": "This extension provids links to two kinds of sample applications:\nJumpstart Agora: Import the Jumpstart Agora Contoso repository, and follow the readme to deploy the Supermarket scenario\nSample plug-and-play applications: Clone one of our reference applications to set up an arc enabled workloads.\n[Get Samples](command:azurearc.getSamples)",
                "media": {
                    "image": "media/getsample.gif",
                    "altText": "Empty image"
                }
            },
            {
                "id": "learn",
                "title": "Learn more",
                "description": "Open help and feedback view and choose what you'd like to do next.\n[Help & Feedback](command:azurearc.openHelp)",
                "media": {
                    "markdown": "media/learn.md"
                },
                "completionEvents": [
                    "onView:arc-extension"
                ]
            }
        ]
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/uuid": "^9.0.1",
    "@types/vscode": "^1.78.0",
    "@typescript-eslint/eslint-plugin": "^5.59.1",
    "@typescript-eslint/parser": "^5.59.1",
    "@vscode/test-electron": "^2.3.0",
    "eslint": "^8.39.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "ts-loader": "^9.4.2",
    "typescript": "^5.0.4",
    "webpack": "^5.81.0",
    "webpack-cli": "^5.1.1"
  },
  "extensionDependencies": [
    "ms-azuretools.azure-dev",
    "ms-vscode.azure-account"
  ],
  "dependencies": {
    "@azure/arm-resources": "^4.2.2",
    "@azure/arm-subscriptions": "^3.1.2",
    "@azure/core-auth": "^1.3.2",
    "@azure/ms-rest-azure-env": "^2.0.0",
    "@azure/ms-rest-nodeauth": "^3.0.10",
    "@kubernetes/client-node": "^0.18.1",
    "@microsoft/vscode-azext-utils": "^1.0.0",
    "@vscode/extension-telemetry": "^0.8.1",
    "axios": "^1.4.0",
    "bufferutil": "^4.0.7",
    "chatgpt": "^5.2.2",
    "gpt3-tokenizer": "^1.1.5",
    "node-fetch": "^3.3.0",
    "openid-client": "^5.4.3",
    "utf-8-validate": "^6.0.3",
    "uuid": "^9.0.0"
  }
}
